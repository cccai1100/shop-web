<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
    <!-- 配置数据源 -->
    <bean name="commonDatasource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="url" value="jdbc:mysql://${jdbc.common.host}:${jdbc.common.port}/test"/>
        <property name="username" value="${jdbc.common.username}"/>
        <property name="password" value="${jdbc.common.password}"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="20"/>
    </bean>

    <!-- 配置数据源 -->
    <bean name="businessDatasource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="url" value="jdbc:mysql://${jdbc.business.host}:${jdbc.business.port}/test"/>
        <property name="username" value="${jdbc.business.username}"/>
        <property name="password" value="${jdbc.business.password}"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="20"/>
    </bean>

    <bean id="dataSource" class="com.ahpu.redis.utils.DynamicDataSource">
        <!-- 目标数据源配置 -->
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry key="common_db" value-ref="commonDatasource"/>
                <entry key="business_db" value-ref="businessDatasource"/>
            </map>
        </property>
        <!-- 默认数据源配置为基础数据源 -->
        <property name="defaultTargetDataSource" ref="commonDatasource"/>
    </bean>

    <!--配置sqlSessionFactory 并读取mybatis的一些配置 -->
    <bean name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- 自动扫描 将Mapper接口生成代理注入到Spring -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.ahpu.redis.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- 配置事物 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- <tx:annotation-driven transaction-manager = "transactionManager"/> -->

    <!-- 事物的具体内容 -->
    <!-- <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes> <tx:method name="add*" propagation="REQUIRED" /> <tx:method
        name="append*" propagation="REQUIRED" /> <tx:method name="insert*" propagation="REQUIRED"
        /> <tx:method name="save*" propagation="REQUIRED" /> <tx:method name="update*"
        propagation="REQUIRED" /> <tx:method name="modify*" propagation="REQUIRED"
        /> <tx:method name="edit*" propagation="REQUIRED" /> <tx:method name="delete*"
        propagation="REQUIRED" /> <tx:method name="remove*" propagation="REQUIRED"
        /> <tx:method name="repair" propagation="REQUIRED" /> <tx:method name="delAndRepair"
        propagation="REQUIRED" /> <tx:method name="get*" propagation="SUPPORTS" />
        <tx:method name="find*" propagation="SUPPORTS" /> <tx:method name="load*"
        propagation="SUPPORTS" /> <tx:method name="search*" propagation="SUPPORTS"
        /> <tx:method name="datagrid*" propagation="SUPPORTS" /> <tx:method name="*"
        propagation="SUPPORTS" /> </tx:attributes> </tx:advice> -->

    <!-- 定义一个切面,在定义的切面上加入事物 -->
    <!-- <aop:config> <aop:pointcut id="transactionPointcut" expression="execution(*
        com.longhang.service..*Impl.*(..))" /> <aop:advisor pointcut-ref="transactionPointcut"
        advice-ref="transactionAdvice" /> </aop:config> -->

</beans>